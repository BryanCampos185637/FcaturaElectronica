#pragma checksum "C:\Users\Bryan J. Campos\Desktop\Proyectos\Factura\ApiFactura\Views\Venta\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "807d719b86eaabb4e34e4cdb923205e07edf5048"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Venta_Index), @"mvc.1.0.view", @"/Views/Venta/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"807d719b86eaabb4e34e4cdb923205e07edf5048", @"/Views/Venta/Index.cshtml")]
    public class Views_Venta_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\Bryan J. Campos\Desktop\Proyectos\Factura\ApiFactura\Views\Venta\Index.cshtml"
  
    ViewData["Title"] = "Index";
    Layout = "~/Views/Layout/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<!-- Modal  producto-->
<div class=""modal fade"" id=""staticBackdrop"" data-backdrop=""static"" data-keyboard=""false"" tabindex=""-1"" aria-labelledby=""staticBackdropLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""staticBackdropLabel"">Productos</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"" id=""divtablaProducto"">
                <table class=""table"" id=""tablaProducto"">
                    <thead>
                        <tr>
                            <th>PRODUCTO</th>
                            <th>PROVEEDOR</th>
                            <th>PRECIO</th>
                            <th>OPCION</th>
                        </tr>
                    </thead>
           ");
            WriteLiteral(@"         <tbody id=""tbodyProducto"">
                    </tbody>
                </table>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" id=""btnCerrarModal"">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class=""modal fade"" id=""modalFacturar"" data-backdrop=""static"" data-keyboard=""false"" tabindex=""-1"" aria-labelledby=""staticBackdropLabel"" aria-hidden=""true"">
    <div class=""modal-dialog modal-lg"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""staticBackdropLabel"">Facturar</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"" id=""divtablaProducto"">
               <div class=""form-group"">
              ");
            WriteLiteral(@"     <label>Nombre comprador</label>
                   <input type=""text"" class=""form-control"" placeholder=""Nombre del comprador"" id=""txtNombreCliente""/>
               </div>
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"" id=""cerrarModalFacturar"">Close</button>
                <button type=""button"" class=""btn btn-primary"" onclick=""Facturar()"">Facturar</button>
            </div>
        </div>
    </div>
</div>

<div class=""row mb-5 mt-3"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <div class=""card-body"">
                <table>
                    <tr>
                        <td width=""20%"">PRODUCTO</td>
                        <td>PRECIO</td>
                        <td>CANTIDAD</td>
                        <td>% DESC.</td>
                        <td>TOTAL DESC</td>
                        <td>SUB TOTAL</td>
                        <td></td>
                   ");
            WriteLiteral(@" </tr>
                    <tr>
                        <td>
                            <input type=""hidden"" id=""txtIdProducto"" />
                            <div class=""input-group"">
                                <input readonly value=""Nombre producto"" class=""form-control"" id=""txtNombreProducto"" />
                                <button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#staticBackdrop"">
                                    Buscar
                                </button>
                            </div>
                        </td>
                        <td><input type=""text"" readonly class=""form-control"" value=""$100.00"" id=""txtPrecioProducto"" /></td>
                        <td><input type=""number"" class=""form-control"" value=""1"" id=""txtCantidad"" onchange=""CalcularPrecioAntesDeListar()"" /></td>
                        <td><input type=""number"" class=""form-control"" value=""0"" id=""txtPorcentaje"" onchange=""CalcularPrecioAntesDeListar()"" /></td>
        ");
            WriteLiteral(@"                <td><input type=""text"" readonly class=""form-control"" value=""0.00"" id=""txtTotalDescuento"" /></td>
                        <td><input type=""text"" readonly class=""form-control"" value=""0.00"" id=""txtSubTotal"" /></td>
                        <td><button class=""btn btn-primary"" onclick=""AgregarProductoAlista()"">ADD</button></td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>
<div class=""row"">
    <div class=""col-lg-8"">
        <div class=""card"">
            <div class=""card-body"">
                <div class=""table-responsive"" id=""divTablaDetalle"">

                </div>
            </div>
        </div>
    </div>
    <div class=""col-lg-4"">
        <div class=""card"">
            <div class=""card-header"">
                <h3>DATOS FACTURA</h3>
            </div>
            <div class=""card-body"">
                <table class=""table"">

                    <tr>
                        <td>Venta total:</td>
           ");
            WriteLiteral(@"             <td id=""tdTotal"">$19.90</td>
                    </tr>
                    <tr>
                        <td>Descuento total:</td>
                        <td id=""tdDescuento"">$1.90</td>
                    </tr>
                    <tr>
                        <td>Subtotal:</td>
                        <td id=""tdSubtotal"">$18.00</td>
                    </tr>
                    <tr>
                        <td colspan=""2"">
                            <div class=""row"">
                                <div class=""col-6"">
                                    <button class=""btn btn-sm btn-danger btn-block"" onclick=""CancelarTodo()"">Cancelar</button>
                                </div>
                                <div class=""col-6"">
                                    <button class=""btn btn-sm btn-primary btn-block"" data-toggle=""modal"" data-target=""#modalFacturar"" id=""btnAbrirFacturar"" disabled>Facturar</button>
                                </div>
                          ");
            WriteLiteral(@"  </div>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
</div>
<script>
    let lstProductosAgregados = [];
    $(() => {
        $.get(`api/productoapi`, ({ data, message }) => {
            if (data != null) {
                PintarTablaDetalleFactura();
                PintarTablaProducto(data);
            } else {
                alert(message);
            }
        })
    })

    const PintarTablaProducto = (data) => {
        let content = `<table class=""table"" id=""tablaProducto"">
                   <thead>
                       <tr>
                           <th>PRODUCTO</th>
                           <th>PROVEEDOR</th>
                           <th>PRECIO</th>
                           <th>OPCION</th>
                       </tr>
                   </thead>
                   <tbody id=""tbodyProducto"">`;
        for (let i = 0; i < data.length; i++) {
            const { id, nombrePro");
            WriteLiteral(@"veedor, descripcionProducto, precioVenta } = data[i];
            content += ` <tr>
                           <td>${descripcionProducto}</td>
                           <td>${nombreProveedor}</td>
                           <td>${precioVenta}</td>
                           <td>
                               <span class=""badge badge-primary"" style=""color:green; cursor:pointer"" onclick=""SeleccionarProducto(${id},'${descripcionProducto}',${precioVenta})"">add</span>
                           </td>
                       </tr>`;
        }
        content += `</tbody></table>`;
        document.querySelector(`#divtablaProducto`).innerHTML = content;
        $('#tablaProducto').DataTable();
    }

    const SeleccionarProducto = (id, nombre, precio) => {
        LimpiarFormularioCalculo();
        $('#txtIdProducto').val(id);
        $('#txtNombreProducto').val(nombre);
        $('#txtPrecioProducto').val(precio);
        $('#txtSubTotal').val(precio);
        document.getElementById('btnCer");
            WriteLiteral(@"rarModal').click();
    }

    const CalcularPrecioAntesDeListar = () => {
        let precioUnitario = $('#txtPrecioProducto').val(),
            porcentajeDescuento = $('#txtPorcentaje').val(),
            cantidadProducto = $('#txtCantidad').val();

        let totalSinDescuento = precioUnitario * cantidadProducto;
        let totalDescuento = (totalSinDescuento / 100) * porcentajeDescuento;
        let subTotal = totalSinDescuento - totalDescuento;
        $('#txtTotalDescuento').val(totalDescuento.toFixed(2));
        $('#txtSubTotal').val(subTotal.toFixed(2));
    }

    const AgregarProductoAlista = () => {
        if (($('#txtIdProducto').val() != '' || $('#txtIdProducto').val() != 0) && $('#txtNombreProducto').val()!='') {
            let objeto = new Object();
            objeto.txtIdProducto = $('#txtIdProducto').val();
            objeto.txtNombreProducto = $('#txtNombreProducto').val();
            objeto.txtPrecioProducto = $('#txtPrecioProducto').val();
            objeto.t");
            WriteLiteral(@"xtCantidad = $('#txtCantidad').val();
            objeto.txtPorcentaje = $('#txtPorcentaje').val();
            objeto.txtTotalDescuento = $('#txtTotalDescuento').val();
            objeto.txtSubTotal = $('#txtSubTotal').val();
            lstProductosAgregados.push(objeto);
            PintarTablaDetalleFactura();
            LimpiarFormularioCalculo();
        }
    }

    const CancelarTodo = () => {
        LimpiarFormularioCalculo();
        lstProductosAgregados = [];
        PintarTablaDetalleFactura();
    }

    const LimpiarFormularioCalculo = () => {
        $('#txtIdProducto').val(0);
        $('#txtNombreProducto').val('');
        $('#txtPrecioProducto').val(0);
        $('#txtCantidad').val(1);
        $('#txtPorcentaje').val(0);
        $('#txtTotalDescuento').val(0);
        $('#txtSubTotal').val(0);
    }

    const PintarTablaDetalleFactura = () => {
        let totalDescuento = 0, total = 0, subtotal = 0;
        let content = `
            <table class=""table ");
            WriteLiteral(@"table-hover"" id=""detalleFactura"">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>PRODUCTO</th>
                                <th>P. UNITARIO</th>
                                <th>CANTIDAD</th>
                                <th>% DESC.</th>
                                <th>TOTAL DESC</th>
                                <th>SUB TOTAL</th>
                            </tr>
                        </thead>
                        <tbody>`;
        for (let i = 0; i < lstProductosAgregados.length; i++) {
            const { txtIdProducto, txtNombreProducto, txtPrecioProducto, txtCantidad, txtPorcentaje, txtTotalDescuento, txtSubTotal } = lstProductosAgregados[i];
          // txtTotalDescuento = txtTotalDescuento == '' || txtTotalDescuento == null ? 0 : txtTotalDescuento;
            content += `<tr>
                                <td>${txtIdProducto}</td>
                                ");
            WriteLiteral(@"<td>${txtNombreProducto}</td>
                                <td>${txtPrecioProducto}</td>
                                <td>${txtCantidad}</td>
                                <td>${txtPorcentaje}</td>
                                <td>${txtTotalDescuento}</td>
                                <td>${txtSubTotal}</td>
                            </tr>`;
            totalDescuento += (txtTotalDescuento * 1);
            total += (txtPrecioProducto * txtCantidad);
            subtotal += (txtSubTotal * 1);
        }
        content += `</tbody></table>`;
        document.getElementById('divTablaDetalle').innerHTML = content;
        $('#detalleFactura').DataTable();
        //pintado datos generales
        $('#tdTotal').html(`$ ${total.toFixed(2)}`);
        $('#tdDescuento').html(`$ ${totalDescuento.toFixed(2)}`);
        $('#tdSubtotal').html(`$ ${subtotal.toFixed(2)}`);

        $('#btnAbrirFacturar').attr('disabled', lstProductosAgregados.length > 0 ? false : true);
    }

    con");
            WriteLiteral(@"st Facturar = () => {
        if ($('#txtNombreCliente').val() != '') {
            let lista = JSON.stringify(lstProductosAgregados);
            let frm = {
                'nombreCliente': $('#txtNombreCliente').val(),
                'lstSerializadaDetalleVenta': lista
            }
            $.ajax({
                url: ""/api/VentaControllerAPI"",
                type: ""POST"",
                contentType:'application/json;charset=utf-8',
                dataType: 'json',
                data: JSON.stringify(frm),
                success: function({ data, message }) {
                    if (data > 0) {
                        DespuesDeFacturar();
                    } else {
                        alert(message);
                    }
                },
                error: (err) => {
                    console.table(err);
                    alert('Ocurrio un error al procesar la petición');
                }
            })
        } else {
            alert('Debes ingres");
            WriteLiteral(@"ar el nombre del cliente');
        }
    }

    const DespuesDeFacturar = () => {
        document.getElementById('cerrarModalFacturar').click();
        $('#txtNombreCliente').val('');
        CancelarTodo();
        alert('Se guardo correctamente');
    }
</script>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
